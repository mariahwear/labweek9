{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Magnetic Fields\n",
    "Mariah Wear\n",
    "3/14/19"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xvar_I = np.array([0, .015, .0305, .0466, .0600, .0751, .0900, .1052, .1202, .1349, .1501, .1639]) #amps\n",
    "yvar_Bz = np.array([-142.41, 187.86, 521.16, 869.61, 1163.52, 1484.67, 1802.85, 2124.03, 2442.18, 2751.24, 3066.36, 3375.42]) #mGauss\n",
    "\n",
    "err_yvar_Bz = np.array([3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0])\n",
    "\n",
    "x = xvar_I   #this should be the array you want to plot on the x axis\n",
    "y = yvar_Bz\n",
    "dy = err_yvar_Bz\n",
    "\n",
    "b,m=np.polynomial.polynomial.polyfit(x,y,1,w=dy)\n",
    "\n",
    "fit = b+m*x\n",
    "\n",
    "def Delta(x, dy):\n",
    "    D = (sum(1/dy**2))*(sum(x**2/dy**2))-(sum(x/dy**2))**2\n",
    "    return D\n",
    " \n",
    "D=Delta(x, dy)\n",
    " \n",
    "dm = np.sqrt(1/D*sum(1/dy**2)) #error in slope\n",
    "db = np.sqrt(1/D*sum(x**2/dy**2)) #error in intercept\n",
    "\n",
    "#Calculate the \"goodness of fit\" from the linear least squares fitting document\n",
    "def LLSFD2(x,y,dy):\n",
    "    N = sum(((y-b-m*x)/dy)**2)\n",
    "    return N\n",
    "                      \n",
    "N = LLSFD2(x,y,dy)\n",
    "\n",
    "plt.figure(figsize=(15,10))\n",
    " \n",
    "plt.plot(x, fit, color='green', linestyle='--')\n",
    "plt.scatter(x, y, color='blue', marker='o')\n",
    " \n",
    " \n",
    "#create labels  YOU NEED TO CHANGE THESE!!!\n",
    "plt.xlabel('I (amps)')\n",
    "plt.ylabel('Bz (mGauss)')\n",
    "plt.title('I vs Bz')\n",
    " \n",
    "plt.errorbar(x, y, yerr=dy, xerr=None, fmt=\"none\") #don't need to plot x error bars\n",
    " \n",
    "plt.annotate('Slope (mGauss/amp) = {value:.{digits}E}'.format(value=m, digits=2),\n",
    "             (0.05, 0.9), xycoords='axes fraction')\n",
    " \n",
    "plt.annotate('Error in Slope (mGauss/amp) = {value:.{digits}E}'.format(value=dm, digits=1),\n",
    "             (0.05, 0.85), xycoords='axes fraction')\n",
    " \n",
    "plt.annotate('Goodness of fit = {value:.{digits}E}'.format(value=N, digits=2),\n",
    "             (0.05, 0.80), xycoords='axes fraction')\n",
    "\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Physics 216\n",
    "#Plotting code to use the whole year!\n",
    "#Jaylene Naylor\n",
    "#September 2015, modified Sept 2017, August 2018\n",
    "#-------------------------------------------#\n",
    "%matplotlib inline\n",
    "#Import packages and libraries needed and give them shortcut names\n",
    "from __future__ import division\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#-------------------------------------------#\n",
    "#Data Section - Create Arrays for data. Perform necessary calculations\n",
    "#CHANGE THE VARIABLE NAMES and numbers to match your data\n",
    "xvariable_changeme = np.array([1.770, 1.510, 1.299, 1.010, 0.760, 0.500, 0.260]) #what are units?\n",
    "yvariable_changeme = np.array([2.638, 2.517, 2.287, 2.014, 1.756, 1.421, 1.009]) #what are units?\n",
    "\n",
    "\n",
    "#--------------------------------------------#\n",
    "#Create arrays for uncertainties\n",
    "#CHANGE THE VARIABLE NAME and numbers to match your data \n",
    "err_yvariable_changeme = np.array([0.08, 0.1, 0.1, 0.05, 0.2, 0.02, 0.09])\n",
    "\n",
    "\n",
    "#--------------------------------------------#\n",
    "#Re-assign variables as x, y, dy so that the following code may remain generic\n",
    "\n",
    "x = xvariable_changeme   #this should be the array you want to plot on the x axis\n",
    "y = yvariable_changeme\n",
    "dy = err_yvariable_changeme  #this should be your error in y array\n",
    "\n",
    "#----------------------------------------------#\n",
    "#Don't need to change anything in this section!\n",
    " \n",
    "#Find the intercept and slope, b and m, from Python's polynomial fitting function\n",
    "b,m=np.polynomial.polynomial.polyfit(x,y,1,w=dy)\n",
    "\n",
    "#Write the equation for the best fit line based on the slope and intercept\n",
    "fit = b+m*x\n",
    "\n",
    "#Calculate the error in slope and intercept \n",
    "#def Delta(x, dy) is a function, and we will learn how to write our own at a later date. They are very useful!\n",
    "def Delta(x, dy):\n",
    "    D = (sum(1/dy**2))*(sum(x**2/dy**2))-(sum(x/dy**2))**2\n",
    "    return D\n",
    " \n",
    "D=Delta(x, dy)\n",
    " \n",
    "dm = np.sqrt(1/D*sum(1/dy**2)) #error in slope\n",
    "db = np.sqrt(1/D*sum(x**2/dy**2)) #error in intercept\n",
    "\n",
    "#Calculate the \"goodness of fit\" from the linear least squares fitting document\n",
    "def LLSFD2(x,y,dy):\n",
    "    N = sum(((y-b-m*x)/dy)**2)\n",
    "    return N\n",
    "                      \n",
    "N = LLSFD2(x,y,dy)\n",
    "\n",
    "#-----------------------------------------------------------------------#\n",
    "#Plot data on graph. Plot error bars and place values for slope, error in slope and goodness of fit on the plot using \"annotate\"\n",
    "plt.figure(figsize=(15,10))\n",
    " \n",
    "plt.plot(x, fit, color='green', linestyle='--')\n",
    "plt.scatter(x, y, color='blue', marker='o')\n",
    " \n",
    " \n",
    "#create labels  YOU NEED TO CHANGE THESE!!!\n",
    "plt.xlabel('xvariable_changeme')\n",
    "plt.ylabel('yvariable_changeme')\n",
    "plt.title('Title_changeme')\n",
    " \n",
    "plt.errorbar(x, y, yerr=dy, xerr=None, fmt=\"none\") #don't need to plot x error bars\n",
    " \n",
    "plt.annotate('Slope (units_changeme) = {value:.{digits}E}'.format(value=m, digits=2),\n",
    "             (0.05, 0.9), xycoords='axes fraction')\n",
    " \n",
    "plt.annotate('Error in Slope (units_changeme) = {value:.{digits}E}'.format(value=dm, digits=1),\n",
    "             (0.05, 0.85), xycoords='axes fraction')\n",
    " \n",
    "plt.annotate('Goodness of fit = {value:.{digits}E}'.format(value=N, digits=2),\n",
    "             (0.05, 0.80), xycoords='axes fraction')\n",
    "\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
